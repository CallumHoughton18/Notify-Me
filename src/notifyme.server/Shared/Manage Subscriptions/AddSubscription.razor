@using notifyme.shared.ViewModels
@inherits notifyme.server.Components.BaseMVVMComponent
@inject IDialogService _dialogService

@if (ViewModel.IsInitialized && !ViewModel.IsDeviceRegistered)
{
    <MudFab Icon="@Icons.Material.Filled.AddAlert" Label="Register" Color="Color.Secondary"  
            Style="position:fixed; bottom:1rem;right:1rem" OnClick="HandleSubmit"   />
}

@code {
    [Parameter]
    public RegisterNotificationSubscriptionViewModel ViewModel { get; set; }
    
    protected override Task OnInitializedAsync()
    {
        BindViewModelToLifeCycle(ViewModel);
        return base.OnInitializedAsync();
    }
    
    async Task HandleSubmit()
    {
        var dialog = _dialogService.Show<NameSubscriptionDialog>("Add Browser Subscription");
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            var subscriptionName = result.Data.ToString();
            await ViewModel.SaveNotificationSubscription(subscriptionName);
        }
    }
}