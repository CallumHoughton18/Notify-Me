@using Microsoft.AspNetCore.Components
@using notifyme.shared
@using notifyme.shared.Models

<MudText Typo="Typo.h6" Class="mb-5">Add Calendar Based Notification</MudText>
<EditForm Model="@CalendarNotification" OnValidSubmit="@OnSubmit" >
    <MudTextField Label="Notification Title" @bind-Value="CalendarNotification.Title" For="@(() => CalendarNotification.Title)"
        Class="mb-2" />
    <MudTextField Label="Notification Body" @bind-Value="CalendarNotification.Body" For="@(() => CalendarNotification.Body)"
        Class="mb-2" />
    <MudDatePicker Label="First Date Occurance" @bind-Date="CalendarNotification.FirstDateOccurance" DisableToolbar="true"
         Class="mb-2" />
    <MudTimePicker Label="First Time Occurance" @bind-Time="CalendarNotification.FirstTimeOccurance" @ref="_picker"
                   AutoClose="true" Class="mb-2">
        <PickerActions>
            <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
        </PickerActions>
    </MudTimePicker>
    <MudItem xs="12" sm="6" md="4" Class="mb-2">
        <MudSelect T="NotifyMeEnums.CalendarNotificationRepeatFormat" Label="Repeat Format" Strict="true"
            Variant="Variant.Outlined" ToStringFunc="@_converter" @bind-Value="CalendarNotification.RepeatFormat">
            @{
                var timeFormats = Enum.GetValues<NotifyMeEnums.CalendarNotificationRepeatFormat>();
            }
            @foreach (var timeFormat in timeFormats)
            {
                <MudSelectItem Value="@(timeFormat)" />
            }
        </MudSelect>
    </MudItem>
    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-5">Submit
    </MudButton>
</EditForm>
@code {
    MudTimePicker _picker;

    readonly Func<NotifyMeEnums.CalendarNotificationRepeatFormat, string> _converter = t =>
    Enum.GetName(typeof(NotifyMeEnums.CalendarNotificationRepeatFormat), t);

    [Parameter]
    public CalendarNotification CalendarNotification { get; set; }

    [Parameter]
    public EventCallback<EditContext> OnSubmit { get; set; }
}